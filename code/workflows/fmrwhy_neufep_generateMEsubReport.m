function report_dir = fmrwhy_neufep_generateMEsubReport(bids_dir, sub)

% TODO: note, this report is built in a simpler/stupider? way than the QC report.
% Just copy all data to new report folder, then replace 'sub-001' with the current subject name
% Must this be updated?


% ------------------------------------
% STEP 1 -- Load default filenames etc
% ------------------------------------

% Setup fmrwhy BIDS-derivatuve directories on workflow level
options = fmrwhy_defaults_setupDerivDirs(bids_dir);

% Grab parameters from workflow settings file
options = fmrwhy_settings_preprocQC(bids_dir, options);

% Setup fmrwhy bids directories on subject level (this copies data from bids_dir)
options = fmrwhy_defaults_setupSubDirs(bids_dir, sub, options);

% Update workflow params with subject anatomical derivative filenames
options = fmrwhy_defaults_subAnat(bids_dir, sub, options);

% Get template echo
echo = options.template_echo;



% ---------------------------
% STEP 2 -- Set up HTML, CSS, asset files
% ---------------------------

% Set up datetime strings for filename and content
dt = datetime('now');
[Y,MO,D,H,MI,S] = datevec(dt);
dt_str = [num2str(Y) num2str(MO) num2str(D) num2str(H) num2str(MI) num2str(round(S))];
t = datestr(dt);

% Set up filenames
% TODO: store this in defaults somewhere, also need to be able to infer fMRwhy directory automatically / or run init function
current_path = mfilename('fullpath');
ind = strfind(current_path,'fMRwhy');
fmrwhy_dir = current_path(1:ind+5);

html_template_fn = fullfile(fmrwhy_dir, 'assets', 'fmrwhy_test_multiechoreport.html');
css_template_fn = fullfile(fmrwhy_dir, 'assets', 'fmrwhy_test_multiechoreport.css');
js_template_fn = fullfile(fmrwhy_dir, 'assets', 'fmrwhy_test_multiechoreport.js');
avatar_template_fn = fullfile(fmrwhy_dir, 'img', 'fmrwhy_logo.jpeg');
data_descriptor_fn = fullfile(fmrwhy_dir, 'assets', 'data_descriptor.png');
me_math_fn = fullfile(fmrwhy_dir, 'assets', 'me_math2.png');

options.sub_dir_me = fullfile(options.deriv_dir, 'fmrwhy-multiecho', ['sub-' sub]);
options.func_dir_me = fullfile(options.sub_dir_me, 'func');
report_dir = fullfile(options.sub_dir_me, ['report_' dt_str]);
report_assets_dir = fullfile(report_dir, 'assets');
report_img_dir = fullfile(report_dir, 'img');
if ~exist(report_dir, 'dir')
    mkdir(report_dir);
end
if ~exist(report_assets_dir, 'dir')
    mkdir(report_assets_dir);
end
if ~exist(report_img_dir, 'dir')
    mkdir(report_img_dir);
end

html_new_fn = fullfile(report_dir, ['sub-' sub '_desc-MEreport_' dt_str '.html']);
html_tmp_fn = 'temp.html';
js_tmp_fn = 'temp.js';

% ---------------------------
% STEP 3 -- Copy all required files
% ---------------------------

% copy assset images and css
copyfile(css_template_fn, report_assets_dir)
copyfile(avatar_template_fn, report_assets_dir)
copyfile(data_descriptor_fn, report_assets_dir)
copyfile(me_math_fn, report_assets_dir)

% copy images generated by fmrwhy_workflow_offlineMEreport
cd(options.func_dir_me);
all_me_pngs = dir('*.png');
for i = 1:numel(all_me_pngs)
    src = fullfile(options.func_dir_me, all_me_pngs(i).name);
    copyfile(src, report_img_dir);
end

% copy statistical Tmap montages
tasks = {'motor', 'emotion'};
runs = {'1', '2'};
echoes = {'2', 'combinedMEtsnr', 'combinedMEt2star', 'combinedMEte', 'combinedMEt2starFIT', 't2starFIT'};
ses = '';
% Loop through sessions, tasks, runs, echoes.
for t = 1:numel(tasks)
    task = tasks{t};
    for r = 1:numel(runs)
        run = runs{r};
        for e = 1:numel(echoes)
            echo = echoes{e};

            options = fmrwhy_defaults_subFunc(bids_dir, sub, ses, task, run, options.template_echo, options);
            options.sub_dir_stats = fullfile(options.stats_dir, ['sub-' sub]);
            run_dir_stats_new = fullfile(options.sub_dir_stats, ['task-' task '_run-' run '_echo-' echo '_noFWEp001e20']);

            consess = options.firstlevel.(task).(['run' run]).contrast_params.consess;

            for k = 1:numel(consess)
                str = consess{k}.tcon.name;
                montage_fn1 = fullfile(run_dir_stats_new, ['sub-' sub '_task-' task '_run-' run '_echo-' echo '_desc-' str '_threshtmap.png']);
                montage_fn2 = fullfile(run_dir_stats_new, ['sub-' sub '_task-' task '_run-' run '_echo-' echo '_desc-' str '_noFWEthreshtmap.png']);
                copyfile(montage_fn1, report_img_dir);
                copyfile(montage_fn2, report_img_dir)
            end
        end
    end
end


% -----------------------------------------------------
% STEP 4 -- Read, replace and write data to HTML report
% -----------------------------------------------------

fid_template = fopen(html_template_fn);
fid_tmp = fopen(html_tmp_fn, 'w');

tline = fgetl(fid_template);
while ischar(tline)
    tline = fgetl(fid_template);
    newString = tline;
    newString = strrep(newString, 'sub-001', ['sub-' sub]);
    if ischar(tline)
        fprintf(fid_tmp,'%s\n', newString);
    end
end
fclose(fid_template);
fclose(fid_tmp);

[status, msg, msgID] = movefile(html_tmp_fn, html_new_fn);
delete(html_tmp_fn)


% -----------------------------------------------------
% STEP 5 -- Read, replace and write data to js file
% -----------------------------------------------------

fid_template = fopen(js_template_fn);
fid_tmp = fopen(js_tmp_fn, 'w');

tline = fgetl(fid_template);
while ischar(tline)
%    disp(tline)
    tline = fgetl(fid_template);
    newString = tline;
    newString = strrep(newString, 'sub-001', ['sub-' sub]);
    if ischar(tline)
        fprintf(fid_tmp,'%s\n', newString);
    end
end
fclose(fid_template);
fclose(fid_tmp);
dest = fullfile(report_dir, 'assets', 'fmrwhy_test_multiechoreport.js');
[status, msg, msgID] = movefile(js_tmp_fn, dest);
delete(js_tmp_fn)























